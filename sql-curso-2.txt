

Un indice es una subconsulta que vamos a tener almacenada en nuestra bd, de manera que se cada vez que realice la consulta sea más eficiente.
Hay veces donde no es necesario crear un indice, sólo debemos actualizarlo, para que incluya más columnas.
El índice de una base de datos es una estructura de datos que mejora la velocidad de las operaciones, por medio de un identificador único de cada fila de una tabla, permitiendo un rápido acceso a los registros de una tabla en una base de datos.
Características:
Los índices pueden ser creados usando una o más columnas, proporcionando la base tanto para búsquedas rápidas al azar como de un ordenado acceso a registros eficiente.
Los índices son construidos sobre árboles B, B+, B* o sobre una mezcla de ellos, funciones de cálculo u otros métodos.
El forzado de indices sólo debe usarse en casos aislados como migraciones o carga de datos.
WITH(INDEX([indexname])), para forzar el uso de un indice en particular.

STORED PROCEDURES: funciones del lado de la base de datos. Nos permite crear consultas frecuentes, hacer una rutina (routines)
                  que haga dicha consulta.

    Sintaxis:

´
    DELIMITER //
    CREATE PROCEDURE nombre_procedimiento (parametro tipo_dato)
    BEGIN
    -- Cuerpo del procedimiento
    END;
´
Ejemplo en MySQL/MariaDB:
´
    CREATE PROCEDURE buscar_usuarios_por_nombre (IN nombre VARCHAR(50))
    BEGIN
    SELECT * FROM usuarios WHERE nombre = nombre;
    END;
´
Y para llamarlo:
´
    CALL buscar_usuarios_por_nombre('Juan');
´

PREPARED STATEMENTS: En un procedimiento almacenado también podemos tener consultas preparadas. 
                    Esto nos permite tener una cadena de texto con código SQL que podremos ejecutar.
                    Se utiliza junto a variables y al metodo CONCAT();

TRIGGERS: eventos dentro de la base de datos. Son similares a los STORED PROCEDURES pero con la diferencia de que
         estos se ejecutan cuando ocurre un evento.
         Palabras clave:
         -NEW: accedemos a los datos nuevos insertados.
         -OLD: los datos que serán reemplazados.
    
    Ejemplo en MySQL/MariaDB:
        "
        CREATE TRIGGER calcular_total_venta AFTER INSERT ON ventas
        FOR EACH ROW
        BEGIN
            DECLARE total DECIMAL(10,2);
            SET total = NEW.cantidad * NEW.precio_unitario;
            INSERT INTO registros_ventas (id_venta, total) VALUES (NEW.id, total);
        END;
        "

    --En AFTER puede estar el BEFORE (after es luego que se realice la acción y before es antes que se haga).
    --En INSERT puede ser cualquier tipo de acción de sql (insert, update, delete, etc).
    --En new puede estar el old, y representa al nuevo dato y al viejo.